{"version":3,"sources":["components/Loader/Loader.module.css","components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","components/Loader/Loader.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","name","id","placeholder","autoComplete","onChange","event","target","onKeyUp","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","props","classes","Loader","Home","loading","users","map","About","Repos","repos","repo","href","html_url","rel","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","blog","followers","following","public_repos","public_gists","style","width","borderRadius","listStyle","padding","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","setLoading","a","axios","get","response","data","items","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b55f683e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1a5mq\",\"sk-bouncedelay\":\"Loader_sk-bouncedelay__3F0bi\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n      <div className=\"navbar-brand\">GitHub Search</div>\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/\" className=\"nav-link\">\r\n            Главная\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/about\" className=\"nav-link\">\r\n            Информация\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const AlertContext = createContext()\r\n","import { createContext } from 'react'\r\n\r\nexport const GithubContext = createContext()\r\n","import React, { useContext, useState } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport default function Search() {\r\n  const [value, setValue] = useState('')\r\n  const alert = useContext(AlertContext)\r\n  const github = useContext(GithubContext)\r\n\r\n  const onSubmit = event => {\r\n    if (event.key !== 'Enter') return\r\n\r\n    github.clearUsers()\r\n\r\n    if (value.trim()) {\r\n      alert.hide()\r\n      github.search(value.trim())\r\n      setValue('')\r\n    } else {\r\n      alert.show('Поле не может быть пустым. Введите данные пользователя!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        name=\"search\"\r\n        id=\"search\"\r\n        placeholder=\"Введите ник или имя пользователя GitHub\"\r\n        autoComplete=\"off\"\r\n        value={value}\r\n        onChange={event => setValue(event.target.value)}\r\n        onKeyUp={onSubmit}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Card({ user }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{user.login}</h5>\r\n        <Link to={'/profile/' + user.login} className=\"btn btn-primary\">\r\n          Открыть\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nexport default props => (\r\n  <div className={classes.Loader}>\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n)\r\n","import React, { useContext } from 'react'\r\nimport Search from '../components/Search'\r\nimport Card from '../components/Card'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nimport Loader from '../components/Loader/Loader'\r\n\r\nexport default function Home() {\r\n  const { loading, users } = useContext(GithubContext)\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          users.map(user => (\r\n            <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n              <Card user={user} />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Информация</h1>\r\n        <p className=\"lead\">\r\n          Версия приложения: <strong>1.0.0</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Repos({ repos }) {\r\n  return (\r\n    <>\r\n      {repos.map(repo => (\r\n        <div className=\"card mb-3\" key={repo.id}>\r\n          <div className=\"card-body\">\r\n            <h5>\r\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {repo.name}\r\n              </a>\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport Repos from '../components/Repos'\r\n\r\nexport default function Profile({ match }) {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext)\r\n  const urlName = match.params.name\r\n\r\n  useEffect(() => {\r\n    getUser(urlName)\r\n    getRepos(urlName)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if (loading) return <Loader />\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n  } = user\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        На главную\r\n      </Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} style={{ width: 150, borderRadius: '50%' }} alt={name} />\r\n              <h2>{name}</h2>\r\n              {location && <p>{location}</p>}\r\n              <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-dark\">\r\n                Открыть профиль\r\n              </a>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"badge badge-primary mr-3 p-2\">Подписчики: {followers}</div>\r\n              <div className=\"badge badge-success mr-3 p-2\">Подписки: {following}</div>\r\n              <div className=\"badge badge-info mr-3 p-2\">Репозитории: {public_repos}</div>\r\n              <div className=\"badge badge-dark mr-3 p-2\">Gists: {public_gists}</div>\r\n\r\n              <ul className=\"mt-4\" style={{ listStyle: 'none', padding: 0 }}>\r\n                {login && (\r\n                  <li>\r\n                    <strong>Имя пользователя: </strong>\r\n                    {login}\r\n                  </li>\r\n                )}\r\n\r\n                {company && (\r\n                  <li>\r\n                    <strong>Компания: </strong>\r\n                    {company}\r\n                  </li>\r\n                )}\r\n\r\n                {blog && (\r\n                  <li>\r\n                    <strong>Сайт: </strong>\r\n                    {blog}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Repos repos={repos} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport default function Alert() {\r\n  const { alert, hide } = useContext(AlertContext)\r\n\r\n  if (!alert) return null\r\n\r\n  return (\r\n    <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role=\"alert\">\r\n      {alert.text}\r\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import { SHOW_ALERT, HIDE_ALERT } from '../types'\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: state => state,\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\n","import React, { useReducer } from 'react'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\n\r\nexport default function AlertState({ children }) {\r\n  const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n  const hide = () => dispatch({ type: HIDE_ALERT })\r\n\r\n  const show = (text, type = 'secondary') => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { type, text },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ hide, show, alert: state }}>{children}</AlertContext.Provider>\r\n  )\r\n}\r\n","import { SEARCH_USERS, GET_REPOS, GET_USER, SET_LOADING, CLEAR_USERS } from '../types'\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, { payload }) => ({ ...state, users: payload, loading: false }),\r\n  [GET_REPOS]: (state, { payload }) => ({ ...state, repos: payload, loading: false }),\r\n  [GET_USER]: (state, { payload }) => ({ ...state, user: payload, loading: false }),\r\n  [SET_LOADING]: state => ({ ...state, loading: true }),\r\n  [CLEAR_USERS]: state => ({ ...state, users: [] }),\r\n  DEFAULT: state => state,\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from '../types'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS })\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING })\r\n\r\n  const search = async value => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(withCreds(`https://api.github.com/search/users?q=${value}&`))\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items,\r\n    })\r\n  }\r\n\r\n  const getUser = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(withCreds(`https://api.github.com/users/${name}?`))\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data,\r\n    })\r\n  }\r\n\r\n  const getRepos = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data,\r\n    })\r\n  }\r\n\r\n  const { user, users, repos, loading } = state\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{ setLoading, search, getUser, getRepos, clearUsers, user, users, repos, loading }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Profile from './pages/Profile'\nimport Alert from './components/Alert'\nimport AlertState from './context/alert/AlertState'\nimport { GithubState } from './context/github/GithubState'\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: 'Test alert' }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/github-search\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}